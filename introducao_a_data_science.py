# -*- coding: utf-8 -*-
"""Introducao a Data Science.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QnpSZFp6Fs0h_djylQTdHc2IY1H4hx3E

#Analisando as notas em geral
"""

import pandas as pd
notas = pd.read_csv("ratings.csv")
notas.head()

notas.shape

notas.columns = ["usuarioId", "filmeId", "notas", "momento"]
notas.head()

notas['notas'].unique()

notas['notas'].value_counts()

print("Media" ,notas['notas'].mean())
print("Mediana" ,notas['notas'].median())

notas.notas.plot(kind='hist')

notas.notas.describe()

import seaborn as sns

sns.boxplot(notas.notas)

"""#Olhando os filmes"""

filmes = pd.read_csv("movies.csv")
filmes.columns = ["filmesId", "titulo", "generos"]
filmes.head()

"""#Analisando algumas notas específicas por filme"""

notas.query("filmeId==1").notas.mean()

notas.query("filmeId==2").notas.mean()

medias_por_filme = notas.groupby("filmeId").mean()["notas"]
medias_por_filme.head()

medias_por_filme.plot(kind='hist')

sns.boxplot(medias_por_filme)

sns.displot(medias_por_filme)

import matplotlib.pyplot as plt
plt.hist(medias_por_filme)
plt.title("Histograma das médias dos filmes")

tmdb = pd.read_csv("tmdb_5000_movies.csv")
tmdb.head()

tmdb.original_language.unique() #categórica nominal

#primeiro grau
#segundo grau
#terceiro grau
# 1 grau < 2 grau < 3 grau #categoria ordinal

#budget => orcamento => quantitativo continuo

contagem_lingua = tmdb["original_language"].value_counts().to_frame().reset_index() #serie
contagem_lingua.columns = ["original_language", "total"]
contagem_lingua.head()

sns.barplot(x="original_language", y="total", data = contagem_lingua)

sns.catplot(x = "original_language", kind="count", data = tmdb) #imprime por categoria contando quantas vezes apareceu

total_por_lingua = tmdb["original_language"].value_counts()
total_geral = total_por_lingua.sum()
total_de_ingles = total_por_lingua.loc["en"]
total_do_resto = total_geral - total_de_ingles
print(total_de_ingles, total_do_resto)

dados = {
    'lingua' : ['ingles', 'outros'],
    'total' : [total_de_ingles, total_do_resto]
}

dados = pd.DataFrame(dados)
dados

sns.barplot(x="lingua", y="total", data = dados)

total_por_lingua_de_outros_filmes = tmdb.query("original_language != 'en'").original_language.value_counts()
total_por_lingua_de_outros_filmes

filmes_sem_lingua_original_em_ingles = tmdb.query("original_language != 'en'")
sns.catplot(x="original_language", kind="count", data = filmes_sem_lingua_original_em_ingles)

sns.catplot(x = "original_language", kind="count", 
            data = filmes_sem_lingua_original_em_ingles, 
            aspect = 2, 
            palette="GnBu_d",
            order = total_por_lingua_de_outros_filmes.index)

"""#Revisando o papel da média, mediana, medidas de tendência central, dispersão, desvio padrão, box plot, histograma"""

import matplotlib.pyplot as plt 
import numpy as np

notas.head(2)

notas_do_toy_story = notas.query("filmeId==1")
notas_do_jumanji = notas.query("filmeId==2")
print(len(notas_do_toy_story), len(notas_do_jumanji))

print("Nota média do Toy Story %.2f" % notas_do_toy_story.notas.mean())
print("Nota média do Jumanji %.2f" % notas_do_jumanji.notas.mean())

print(notas_do_toy_story.notas.std(), notas_do_jumanji.notas.std())

print("Nota mediana do Toy Story %.2f" % notas_do_toy_story.notas.median())
print("Nota mediana do Jumanji %.2f" % notas_do_jumanji.notas.median())

"""Para estudarmos mais profundamente a dispersão de dados, criaremos um exemplo hipotético com dois conjuntos de 20 notas cada um. O primeiro, filme1, contém um conjunto de 10 notas 2,5, e outro de 10 notas 3,5. Já o segundo, filme2, contém conjuntos de notas 5 e 1. Essas notas são agrupadas em arrays do Numpy.


"""

filme1 = np.append(np.array([2.5] * 10), np.array([3.5] * 10))
filme2 = np.append(np.array([5] * 10), np.array([1] * 10))

print(filme1.mean(), filme2.mean())
print(np.std(filme1), np.std(filme2))
print(np.median(filme1), np.median(filme2))

plt.hist(filme1)
plt.hist(filme2)

plt.boxplot([filme1, filme2])

"""Para mostrarmos o boxplot do com as notas de cada filme com o Matplotlib, chamamos a função plt.boxplot() e passamos, em um array, as notas que queremos plotar - no nosso caso, as notas de Toy Story e Jumanji:


"""

plt.boxplot([notas_do_toy_story.notas, notas_do_jumanji.notas])

"""Já com o Seaborn, devemos chamar a função sns.boxplot() passando, no eixo x, o filmeId; no eixo y, a nota; e, como fonte dos dados (data), a query filmeId in [1,2].


"""

sns.boxplot(x="filmeId", y="notas", data = notas.query("filmeId in [1, 2]"))